{"version":3,"sources":["../../../src/ServerComponents/UpdateSchema/UpdateSchema.js"],"names":["UpdateSchema","forced","fs","readFile","path","join","__dirname","err","data","error","console","log","undefined","JSON","parse","lastUpdate","Date","now"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA;;;;;AAKA,IAAMA,YAAY,GAAG,SAAfA,YAAe,GAAsB;AAAA,MAApBC,MAAoB,uEAAX,KAAW;;AAEzC;AACAC,iBAAGC,QAAH,CAAaC,iBAAKC,IAAL,CAAWC,SAAX,EAAsB,+BAAtB,CAAb,EAAsE,MAAtE,EAA8E,UAAEC,GAAF,EAAOC,IAAP,EAAiB;AAE7F;AACA,QAAKD,GAAG,IAAIN,MAAZ,EAAsB;AAEpB,8CACU,UAAAQ,KAAK;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAaF,KAAb,CAAJ;AAAA,OADf;AAGA,aAAOG,SAAP;AACD,KAT4F,CAW7F;AACA;;;AACA,QAAIC,IAAI,CAACC,KAAL,CAAWN,IAAX,EAAiBO,UAAjB,GAA8B,OAA9B,GAAwCC,IAAI,CAACC,GAAL,EAA5C,EAAyD;AACvD,8CACU,UAAAR,KAAK;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAaF,KAAb,CAAJ;AAAA,OADf;AAED;AAEF,GAlBD;AAmBD,CAtBD;;eAwBeT,Y","sourcesContent":["import path from 'path';\r\nimport fs from 'fs';\r\nimport SchemaQuery from './SchemaQuery';\r\n\r\n/**\r\n * Actualiza el schema local de la base de datos\r\n *\r\n * @param {boolean} [forced=false] Si se desea forzar una actualizacion del schema\r\n */\r\nconst UpdateSchema = ( forced = false ) => {\r\n\r\n  //Lee el archivo local del schema\r\n  fs.readFile( path.join( __dirname, '../../ServerFiles/Schema.json' ), 'utf8', ( err, data ) => {\r\n\r\n    //Si el archivo no existe o si se fuerza el update, se ejecuta SchemaQuery\r\n    if ( err || forced  ) {\r\n\r\n      SchemaQuery()\r\n        .catch( error => console.log( error ) );\r\n\r\n      return undefined;\r\n    }\r\n    \r\n    // Si el archivo existe, chequea la ultima vez que se actualizo el schema. \r\n    // Si fue hace mas de 30 min, se actualiza el schema.\r\n    if( JSON.parse(data).lastUpdate + 1800000 < Date.now() ) {\r\n      SchemaQuery()\r\n        .catch( error => console.log( error ) );\r\n    }\r\n    \r\n  });\r\n};\r\n\r\nexport default UpdateSchema;\r\n"],"file":"UpdateSchema.js"}